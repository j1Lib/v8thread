function v8t(a, b, c) {
    this.url = a;
    this.partial = 1024 * (c || 50) - 320;
    this.thread = b || 5;
    this.response = {};
    this.ajax(0, this.partial, function(a) { this.range = a.getResponseHeader("Content-Range").split("/")[1];
        this.finish(0, a); for (a = 1; a < this.range / this.partial; a++) a <= this.thread && this.handle(a) }, function(a) { window.xhr = a;
        console.log(a.status) });
    var e;
    this.done = function(a) { "function" == typeof a ? e = a : e && e.call(this, a); return this };
    var f;
    this.load = function(a) { "function" == typeof a ? f = a : f && f.call(this, a); return this };
    this.config = { createBlob: !0 };
    return this
}
v8t.prototype.concat = function(a, b) { var c = new a.constructor(a.length + b.length); return c.set(a, 0), c.set(b, a.length), c };
v8t.prototype.handle = function(a) { var b = this.partial * a,
        c = b + this.partial;
    c >= this.range && (c = this.range);
    this.ajax(b + 1, c, function(b) { this.finish(a, b);
        a += this.thread;
        a < this.range / this.partial && this.handle(a) }, function(b) { 200 == b.status && this.finish(a, b) }) };
v8t.prototype.finish = function(a, b) {
    this.response[a] = new Uint8Array(b.response);
    var c = Object.keys(this.response).length;
    if (c >= this.range / this.partial)
        if (this.config.createBlob) { for (a = 1; a < c; a++) this.response[a] = this.concat(this.response[a - 1], this.response[a]);
            this.done(URL.createObjectURL(new Blob([this.response[c - 1]], { type: this.config.mimeType }))) } else this.done();
    else 0 == a ? (this.config.mimeType = b.getResponseHeader("Content-Type"), this.config.createBlob ? this.done(URL.createObjectURL(new Blob([this.response[c -
        1]], { type: this.config.mimeType }))) : this.done()) : this.load(parseInt(100 * c / this.range * this.partial))
};
v8t.prototype.ajax = function(a, b, c, e) { var f = this,
        d = new XMLHttpRequest;
    d.onreadystatechange = function() { 4 == this.readyState && (206 == this.status ? c && c.call(f, d) : e && e.call(f, d)) };
    d.open("GET", this.url, !0);
    d.setRequestHeader("Range", "bytes=" + a + "-" + b);
    d.responseType = "arraybuffer";
    d.send() };
v8t.prototype.init = function(a) {
    switch (a.tagName) {
        case "IMG":
            if (a.hasAttribute("thread-src")) {
                var b = document.createElement("canvas"),
                    c, e = 0,
                    f = 0;
                return (new v8t(a.getAttribute("thread-src"), a.getAttribute("thread") || 5, a.getAttribute("partial") || 50)).done(function(b) { a.onload = function() { URL.revokeObjectURL(this.src) };
                    a.src = b }).load(function(d) {
                    2 == d && (b.width = a.width, b.height = a.height, c = b.getContext("2d"), c.fillStyle = "#424242", c.strokeStyle = "#fff");
                    c.fillRect(0, 0, b.width, b.height);
                    e += Math.PI / 50 * d;
                    f += Math.PI /
                        200 * d;
                    c.arc(b.width / 2, b.height / 2, 70, f, e / 2, !1);
                    c.font = "30px Arial";
                    c.strokeText("j1Lib", b.width - 100, b.height - 50);
                    c.stroke();
                    a.src = b.toDataURL()
                })
            }
        case "AUDIO":
        case "VIDEO":
            if (a.hasAttribute("thread-src")) {
                window.mediaSource = new MediaSource;
                var d = 0;
                mediaSource.addEventListener("sourceopen", function() {
                    window.sourceBuffer = mediaSource.addSourceBuffer(a.getAttribute("type") || 'video/webm; codecs="vorbis,vp8"');
                    sourceBuffer.addEventListener("updateend", function() {
                        ++d >= g ? mediaSource.endOfStream() : k && sourceBuffer.appendBuffer(l.response[d]);
                        h = !1
                    })
                }, !1);
                a.onload = function() { URL.revokeObjectURL(this.src) };
                a.src = URL.createObjectURL(mediaSource);
                var h = !1,
                    m = !1,
                    k = !1,
                    g = 0,
                    l;
                return (new v8t(a.getAttribute("thread-src"), 5, a.getAttribute("partial") || 50)).done(function(b) { m ? d < g && (k = !0, l = this) : (g = this.range / this.partial, m = !0, a.hasAttribute("autoplay") && a.play());
                    sourceBuffer.appendBuffer(this.response[d]) }).load(function(a) {!h && this.response[d] && (h = !0, sourceBuffer.appendBuffer(this.response[d])) }).config.createBlob = !1
            }
    }
};
v8t.prototype.support = ["img", "video", "audio"];
(function() { v8t.prototype.support.forEach(function(a) { a = document.getElementsByTagName(a); for (var b = 0; b < a.length; b++) v8t.prototype.init(a[b]) }) })();